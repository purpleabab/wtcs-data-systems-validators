@startuml
package data.validator.type <<Frame>> {

/'
===============
DEFINE ENTITIES
===============
'/

  interface TypeValidator <<interface>> {
    +boolean isValid(String)
  }

  abstract class TypeValidatorBase {
    -String:TYPE_REGEX
    -Pattern:TYPE_PATTERN
    -Matcher:TYPE_MATCHER
    ..
    -String:WHITESPACE_REGEX
    -Pattern:WHITESPACE_PATTERN
    -Matcher:WHITESPACE_PATTERN
    __
    +TypeValidatorBase(String regex)
    ..TypeValidator..
    +boolean isValid(String)
  }

  class NumericTypeValidator<? extends TypeValidatorBase> {
    -{static} String:NUMERIC_TYPE_REGEX
    __
    +NumericTypeValidator()
    +String toString()
  }

  class AlphaNumericTypeValidator<? extends TypeValidatorBase> {
    -{static} String:ALPHA_NUMERIC_TYPE_REGEX
    __
    +AlphaNumericTypeValidator()
    +String toString()
  }

  class AlphaTypeValidator<? extends TypeValidatorBase> {
    -{static} String:ALPHA_TYPE_REGEX
    __
    +AlphaTypeValidator()
    +String toString()
  }

  enum ValidateType {
    NUMERIC
    ALPHA
    ALPHANUMERIC
    __
    +Class<? extends TypeValidatorBase> getImplementorClass()
    +String toString()
  }

/'
=================================
DEFINE RELATIONS BETWEEN ENTITIES
=================================
'/

NumericTypeValidator -right-|> TypeValidatorBase:extends
AlphaTypeValidator --|> TypeValidatorBase:extends
AlphaNumericTypeValidator --|> TypeValidatorBase:extends

TypeValidatorBase ..|> TypeValidator:implements

/'
============================
NOTES ABOUT VARIOUS ENTITIES
============================
'/

note bottom of ValidateType
Used to specify what type of characters should be
expected in each field of a record.

Members are implicitly static extensions of the
enum, and can provide the implementing Class
which can validate them, for use via reflection.

<i>Any new validators created need added here.</i>
end note

note right of TypeValidatorBase
Implements all of the logic needed to validate
a String from a provided regular expression,
permitting the provided regex or whitespace.

Permitting whitespace in addition to valid
characters prevents adding the concept of a
field being "required" without some refactoring.

Other types of regex-based validators can
extend this base class, providing only the
regex against which to validate.
end note

note left of TypeValidator
All validators derived from TypeValidatorBase
implement TypeValidator, and can be treated as
such when doing validation.
end note

}
@enduml